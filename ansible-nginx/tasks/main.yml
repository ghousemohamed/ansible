---

- name: ensure nginx is at the latest version
  apt: 
    name: nginx
    state: latest
    update_cache: true

  notify: start nginx
  
- name: install certbot for nginx
  apt:
    name: python3-certbot-nginx
    state: latest
    update_cache: true

- name: install software properties common
  apt:
    name: software-properties-common
    state: present

- name: Add certbot repository
  apt_repository:
   repo: 'ppa:certbot/certbot'
  
- name: install certbot
  apt:
    name: certbot
    state: latest

- name: Configure nginx proxy params and ssl params
  template:
    src: "{{ item }}"
    dest: "/etc/nginx"
  with_items:
    - proxy_params
    - ssl_params

- name: Configure nginx sites available file
  template:
    src: "{{ item }}"
    dest: "/etc/nginx/sites-available"
  with_items:
    - appname.conf

- name: syslink for sites-available
  raw: ln -s /etc/nginx/sites-available /etc/nginx/sites-enabled
  
  notify: reload nginx

- name: Check if certificate already exists.
  stat:
    path: /etc/letsencrypt/live/{{ item }}/cert.pem
  register: letsencrypt_cert
  with_items: "{{ domainname }}"

- name: stop nginx
  service:
    name: nginx
    state: stopped

- name: Generate new certificate if one doesn't exist.
  shell: "certbot certonly --standalone --noninteractive --agree-tos --email {{ certbot_admin_email }} -d {{ servername }}"
  with_items: "{{ letsencrypt_cert.results }}"
  when: item.stat.exists == False

- name: start nginx
  service:
    name: nginx
    state: started